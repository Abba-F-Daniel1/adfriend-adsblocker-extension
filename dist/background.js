chrome.runtime.onInstalled.addListener(async()=>{await chrome.storage.sync.set({blockedCount:0,transformedCount:0,blockingHistory:Array(7).fill(0)}),await chrome.storage.local.set({blockedAds:[]}),await chrome.declarativeNetRequest.setExtensionActionOptions({displayActionCountAsBadgeText:!0})});var a;(a=chrome.declarativeNetRequest.onRuleMatchedDebug)==null||a.addListener(({request:e,rule:n})=>{e.type!=="main_frame"&&(console.debug(`[AdFriend] Blocked ad request to: ${e.url}`),console.debug(`[AdFriend] Matched rule: ${n.ruleId}`),chrome.storage.sync.get(["blockedCount","transformedCount","blockingHistory"],t=>{const r=(t.blockedCount||0)+1,c=t.blockingHistory||Array(7).fill(0);c[6]=r,chrome.storage.sync.set({blockedCount:r,blockingHistory:c},()=>{if(chrome.runtime.lastError){console.error("[AdFriend] Error updating blocked count:",chrome.runtime.lastError);return}try{chrome.runtime.sendMessage({type:"updateCounts",blockedCount:r,transformedCount:t.transformedCount||0})}catch{console.debug("[AdFriend] Popup not ready for message")}const d={url:e.url,ruleId:n.ruleId,timestamp:new Date().toISOString(),type:"blocked",details:{initiator:e.initiator||"unknown",frameId:e.frameId,resourceType:e.type||"unknown",isAdResource:!0}};chrome.storage.local.get("blockedAds",s=>{const o=s.blockedAds||[];o.push(d),o.length>1e3&&o.shift(),chrome.storage.local.set({blockedAds:o})})})}))});
//# sourceMappingURL=background.js.map
